@{
    Layout = null;
}
<!DOCTYPE html>
<html lang="tr">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>$$ RS-CBA $$</title>
    <link rel="stylesheet" href="~/css/site.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Playfair+Display:wght@700&family=Lato:wght@300;400;700&display=swap" rel="stylesheet">

    <!-- TailwindCSS -->
    <script src="https://cdn.tailwindcss.com"></script>

    <!-- Animate.css -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/animate.css/4.1.1/animate.min.css" />

    <link rel="icon" type="image/png" href="~/assest/favicon.png" />
    <style>
        .countdown-container {
            text-align: center;
            /* color: #fff; */
            padding: 20px;
            /* backdrop-filter: blur(10px); */
            /* border-radius: 20px; */
            /* background: rgba(0, 0, 0, 0.4); */
            /* box-shadow: 0 0 30px rgba(0, 0, 0, 0.3); */
            font-family: 'Segoe UI', sans-serif;
            max-width: 600px;
            margin: auto;
        }

            .countdown-container h2 {
                font-size: 28px;
                margin-bottom: 20px;
                color: #fff;
                text-shadow: 0 0 5px #00f0ff;
            }

        .countdown {
            display: flex;
            justify-content: center;
            gap: 20px;
        }

            .countdown div {
                background: linear-gradient(145deg, #0f2027, #203a43, #2c5364);
                padding: 20px;
                border-radius: 12px;
                box-shadow: 0 4px 20px rgba(0, 255, 255, 0.3);
                min-width: 80px;
                transition: transform 0.2s ease;
            }

                .countdown div:hover {
                    transform: scale(1.05);
                }

            .countdown span {
                font-size: 32px;
                font-weight: bold;
                display: block;
                color: #00f0ff;
                text-shadow: 0 0 10px #00f0ff;
            }

            .countdown label {
                font-size: 14px;
                color: #ccc;
                margin-top: 5px;
                display: block;
            }
    </style>

</head>
<body>

    <!-- Loading Overlay -->
    <div id="loader" class="fixed inset-0 z-50 flex flex-col items-center justify-center bg-black bg-opacity-50 backdrop-blur-sm">
        <div class="relative w-24 h-24">
            <div class="absolute inset-0 animate-spin">
                <svg class="w-full h-full text-pink-500" fill="none" viewBox="0 0 24 24">
                    <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
                    <path class="opacity-75" fill="currentColor"
                          d="M4 12a8 8 0 018-8v4a4 4 0 00-4 4H4z" />
                </svg>
            </div>
            <div class="absolute inset-0 flex items-center justify-center">
                <svg class="w-8 h-8 text-rose-500 animate__animated animate__heartBeat animate__infinite" fill="currentColor" viewBox="0 0 20 20">
                    <path fill-rule="evenodd"
                          d="M3.172 5.172a4 4 0 015.656 0L10 6.343l1.172-1.171a4 4 0 115.656 5.656L10 17.657l-6.828-6.829a4 4 0 010-5.656z"
                          clip-rule="evenodd" />
                </svg>
            </div>
        </div>
        <p class="mt-4 text-xl text-white animate__animated animate__fadeInUp animate__infinite" id="loadText">...</p>
    </div>


    <!-- Alert Wrapper -->
    <div id="info-alert" class="fixed inset-0 bg-black bg-opacity-30 flex items-center justify-center z-50 hidden">
        <div class="bg-white rounded-xl shadow-lg p-6 w-80 animate__animated animate__fadeInDown">
            <div class="flex items-center space-x-3">
                <svg class="w-6 h-6 text-blue-500" fill="none" stroke="currentColor" stroke-width="2"
                     viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round"
                          d="M13 16h-1v-4h-1m1-4h.01M12 20a8 8 0 100-16 8 8 0 000 16z" />
                </svg>
                <h3 class="text-lg font-semibold text-gray-800">Bilgilendirme</h3>
            </div>
            <p class="mt-3 text-gray-600 text-sm">Fotograflar basarıyla yüklendi!</p>
        </div>
    </div>

    <!-- Error Alert -->
    <div id="error-alert" class="fixed inset-0 bg-black bg-opacity-30 flex items-center justify-center z-50 hidden">
        <div class="bg-white rounded-xl shadow-lg p-6 w-80 animate__animated animate__shakeX">
            <div class="flex items-center space-x-3">
                <svg class="w-6 h-6 text-red-500" fill="none" stroke="currentColor" stroke-width="2"
                     viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round"
                          d="M18.364 5.636l-1.414-1.414L12 9.172 7.05 4.222 5.636 5.636 10.586 10.586 5.636 15.536l1.414 1.414L12 12.828l4.95 4.95 1.414-1.414L13.414 10.586z" />
                </svg>
                <h3 class="text-lg font-semibold text-gray-800">Hata</h3>
            </div>
            <p class="mt-3 text-gray-600 text-sm">Bir seyler ters gitti. Lütfen tekrar deneyin.</p>
        </div>
    </div>


    <!-- Arka Plan Slider -->
    <div class="background-slider">
        <!-- Fotograf Slide 1 (Kendi fotografınızla degistirin) -->
        <div class="slide active" style="background-image: url('assest/Biz.JPG');"></div>

        <!-- Fotograf Slide 2 (Kendi fotografınızla degistirin) -->
        <div class="slide" style="background-image: url('assest/Biz2.JPG');"></div>
        <div class="slide" style="background-image: url('assest/Analar.JPG');"></div>
        <div class="slide" style="background-image: url('assest/Jehat.JPG');"></div>
        <!-- Video Slide (Kendi videonuzla degistirin) -->
        <div class="slide">
            <video class="background-video" autoplay muted loop playsinline>
                <source src="assest/IMG_7542.MP4" type="video/mp4">
                Tarayıcınız video etiketini desteklemiyor.
            </video>
        </div>

    </div>


    <!-- Ana Baslık İcerigi -->
    <div class="hero-content">
        <h1>Dilan & Bünyamin</h1>
        <p>Bu mutlu günümüzü bizimle paylastıgınız icin tesekkür ederiz</p>
    </div>

    <main class="container" style="text-align: center;">
        <section id="upload-section">
            <h2>Anılarınızı Bizimle Paylasın</h2>
            <p>Dügün sırasında cektiginiz en güzel fotografları buraya yükleyebilirsiniz.</p>

            <form id="upload-form">
                <label for="file-input" class="custom-file-upload">
                    <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4"></path><polyline points="17 8 12 3 7 8"></polyline><line x1="12" y1="3" x2="12" y2="15"></line></svg>
                    Fotograf Sec
                </label>
                <input id="file-input" type="file" multiple accept="image/*">

                <div id="preview-area"></div>

                <button type="submit" id="upload-button" disabled>Secilenleri Yükle</button>
            </form>
        </section>

        <section id="gallery-section">
            <h2>Yüklenen Fotograflar</h2>
            <h3 class="overtime">2025.09.06 - 00:30 da yüklenen tüm fotografları burada görebileceksiniz.</h3>
            <div class="countdown-container">
                <div class="countdown">
                    <div><span id="days">00</span><label>Gün</label></div>
                    <div><span id="hours">00</span><label>Saat</label></div>
                    <div><span id="minutes">00</span><label>Dakika</label></div>
                    <div><span id="seconds">00</span><label>Saniye</label></div>
                </div>
            </div>            <div id="photo-gallery" class="gallery-grid">
                <!-- Yüklenen fotograflar buraya eklenecek -->
            </div>
        </section>
    </main>

    <footer class="main-footer">
        <p>En güzel anılar birlikte birikir.</p>
    </footer>

    <script src="~/js/site.js"></script>

    <script>
        const fileInput = document.getElementById('file-input');
        const uploadButton = document.getElementById('upload-button');
        const previewArea = document.getElementById('preview-area');
        const photoGallery = document.getElementById('photo-gallery');
        let selectedFiles = [];

        // Hedef tarih (Yıl, Ay-1, Gün, Saat, Dakika)
        const targetDate = new Date(2025, 8, 6, 0, 30, 0); // 8 = Eylül (0-indexli)

        function updateCountdown() {
            const now = new Date();
            const diff = targetDate - now;

            if (diff <= 0) {
                document.querySelector('.countdown-container').innerHTML = `
                                <h2>Zamanı Geldi :) </h2>`;
                document.querySelector('.overtime').innerHTML = '';
                return;
            }

            const days = Math.floor(diff / (1000 * 60 * 60 * 24));
            const hours = Math.floor((diff / (1000 * 60 * 60)) % 24);
            const minutes = Math.floor((diff / (1000 * 60)) % 60);
            const seconds = Math.floor((diff / 1000) % 60);

            document.getElementById("days").innerText = String(days).padStart(2, '0');
            document.getElementById("hours").innerText = String(hours).padStart(2, '0');
            document.getElementById("minutes").innerText = String(minutes).padStart(2, '0');
            document.getElementById("seconds").innerText = String(seconds).padStart(2, '0');
        }

        updateCountdown();
        setInterval(updateCountdown, 1000);

        //-------------------------------

        // Dosya secildiginde önizleme ve buton aktiflesir
        fileInput.addEventListener('change', (event) => {
            previewArea.innerHTML = '';
            selectedFiles = Array.from(event.target.files);

            if (selectedFiles.length > 0) {
                uploadButton.disabled = false;
                uploadButton.textContent = `${selectedFiles.length} Fotografı Yükle`;

                selectedFiles.forEach(file => {
                    if (file.type.startsWith('image/')) {
                        const reader = new FileReader();

                        reader.onload = (e) => {
                            const previewContainer = document.createElement('div');
                            previewContainer.classList.add('preview-image-container');

                            const img = document.createElement('img');
                            img.classList.add('preview-image');
                            img.src = e.target.result;

                            previewContainer.appendChild(img);
                            previewArea.appendChild(previewContainer);
                        };

                        reader.readAsDataURL(file);
                    }
                });
            } else {
                uploadButton.disabled = true;
                uploadButton.textContent = 'Secilenleri Yükle';
            }
        });

        function triggerDownload(url, filename = 'download.jpg') {
            fetch(url)
                .then(res => res.blob())
                .then(blob => {
                    const link = document.createElement('a');
                    link.href = URL.createObjectURL(blob);
                    link.download = filename;
                    document.body.appendChild(link);
                    link.click();
                    link.remove();
                });
        }


        // Galeriyi backend'den günceller
        function refreshGallery() {
            fetch('/api/upload/photos')
                .then(res => res.json())
                .then(images => {
                    photoGallery.innerHTML = '';

                    if (images.length > 0) {

                        images.forEach(photo => {
                            const container = document.createElement('div');
                            container.classList.add('photo-wrapper');

                            const img = document.createElement('img');
                            img.classList.add('gallery-item');
                            img.src = photo.url;
                            img.loading = "lazy";

                            const downloadBtn = document.createElement('button');
                            downloadBtn.classList.add('download-icon');
                            downloadBtn.innerHTML = `
                                        <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="white" viewBox="0 0 24 24">
                                            <path d="M12 16l4-5h-3V4h-2v7H8l4 5zm8 3H4v2h16v-2z"/>
                                        </svg>
                                    `;

                            downloadBtn.addEventListener('click', () => {
                                const fileName = photo.url.split('/').pop().split('?')[0]; // filename from URL
                                triggerDownload(photo.url, fileName);
                            });

                            container.appendChild(img);
                            container.appendChild(downloadBtn);
                            photoGallery.appendChild(container);
                        });
                    };
                })
                .catch(err => {
                    console.error("Galeri yüklenemedi", err);
                });
        }

        // Yükleme butonuna basıldıgında secilen tüm dosyaları gönder
        document.getElementById("upload-form").addEventListener("submit", async (e) => {
            e.preventDefault();

            if (selectedFiles.length === 0) {
                alert("Lütfen önce fotoğraf seçin.");
                return;
            }

            document.getElementById("loader").classList.remove("hidden");
            uploadButton.disabled = true;
            uploadButton.textContent = "Yükleniyor...";

            try {
                const chunkSize = 10;

                for (let i = 0; i < selectedFiles.length; i += chunkSize) {

                    const chunk = selectedFiles.slice(i, i + chunkSize);

                    const formData = new FormData();
                    chunk.forEach(file => formData.append("files", file));

                    const response = await fetch("/api/upload/multi", {
                        method: "POST",
                        body: formData
                    });

                    if (!response.ok) throw new Error("Upload failed");

                    document.getElementById("loadText").innerHTML = `${Math.floor(i / chunkSize) + 1} fotograf  yüklendi...`;

                    // console.log(`Chunk ${Math.floor(i / chunkSize) + 1} yüklendi`);
                }

                showInfoAlert("Fotoğraflar başarıyla yüklendi. Belirtilen tarihte ekledikleriniz listelenecek. Herkes sizin gibi iyi niyetli değil maalesef.");
            } catch (err) {
                console.error(err);
                showErrorAlert("Bir hata oluştu, lütfen tekrar deneyin.");
            } finally {
                selectedFiles = [];
                previewArea.innerHTML = '';
                fileInput.value = '';
                uploadButton.disabled = true;
                uploadButton.textContent = 'Seçilenleri Yükle';
                refreshGallery();
                document.getElementById("loader").classList.add("hidden");
            }
        });

        window.addEventListener('DOMContentLoaded', refreshGallery);

        window.addEventListener("load", () => {
            const loader = document.getElementById("loader");
            if (loader) {
                loader.classList.add("animate__fadeOut");
                setTimeout(() => document.getElementById("loader").classList.add("hidden"), 1000);
            }
        });

        function showInfoAlert(message) {
            const alertBox = document.getElementById("info-alert");
            alertBox.querySelector("p").textContent = message;
            alertBox.classList.remove("hidden");

            setTimeout(() => {
                alertBox.classList.add("animate__fadeOutUp");
                setTimeout(() => {
                    alertBox.classList.add("hidden");
                    alertBox.classList.remove("animate__fadeOutUp");
                }, 1500);
            }, 3500);
        }

        function showErrorAlert(message) {
            const alertBox = document.getElementById("error-alert");
            alertBox.querySelector("p").textContent = message;
            alertBox.classList.remove("hidden");

            setTimeout(() => {
                alertBox.classList.add("animate__fadeOutUp");
                setTimeout(() => {
                    alertBox.classList.add("hidden");
                    alertBox.classList.remove("animate__fadeOutUp");
                }, 500);
            }, 3000);
        }

    </script>
</body>
</html>
